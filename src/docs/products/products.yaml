openapi: 3.1.0
info:
  title: API de Productos
  version: 1.0.0
paths:
  /api/products:
    get:
      summary: Obtener todos los productos
      description: Obtiene una lista de todos los productos disponibles.
      tags:
        - Productos
      responses:
        "200":
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Crear un nuevo producto
      description: Crea un nuevo producto en la base de datos.
      tags:
        - Productos
      security:
        - roleAuth: ['admin', 'premium']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado exitosamente
        "401":
          description: No autorizado
  /api/products/{id}:
    get:
      summary: Obtener un producto por ID
      description: Obtiene un producto específico por su ID.
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a obtener
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
    put:
      summary: Actualizar un producto por ID
      description: Actualiza un producto específico por su ID.
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: string
      security:
        - roleAuth: ['admin', 'premium']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "401":
          description: No autorizado
        "404":
          description: Producto no encontrado
    delete:
      summary: Eliminar un producto por ID
      description: Elimina un producto específico por su ID.
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      security:
        - roleAuth: ['admin', 'premium']
      responses:
        "204":
          description: Producto eliminado exitosamente
        "401":
          description: No autorizado
        "404":
          description: Producto no encontrado
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Id de MongoDB
        title:
          type: string
          description: Título del producto
        description:
          type: string
          description: Descripción del producto
        code:
          type: string
          description: Código del producto
        price:
          type: number
          description: Precio del producto
        status:
          type: boolean
          description: Estado del producto
        stock:
          type: string
          description: Cantidad en stock del producto
        category:
          type: string
          description: Categoría del producto
        owner:
          type: string
          description: Propietario del producto
      example:
        _id: "64a73d377e32fc3410d13a9d"
        title: "producto Mongo"
        description: "soy de mongo"
        code: "mongo04"
        price: 418
        status: true
        stock: "135"
        category: "Producto de mongo"
        owner: "Admin"

  requestBodies:
    updateProduct:
      description: Cuerpo con la información del producto a actualizar
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"  

security:
  - roleAuth: ['admin', 'premium']